set dotenv-load

ROOT_DIR := invocation_directory()
VENV_DIR := ROOT_DIR + '/venv'
BIN := VENV_DIR + '/bin'
PIP_COMPILE := BIN + '/pip-compile'
PIP := BIN + '/pip'

INIT_DB_FILE := "db/db_init.gz"

BLACK := BIN + '/black'
MYPY := BIN + '/mypy'
FLAKE := BIN + '/flake8'

PROJECT_NAME := 'vr-controlled-robot'

REQUIREMENTS_DIR := './requirements'
BASE_REQUIREMENTS := REQUIREMENTS_DIR + '/base.txt'
LINT_REQUIREMENTS := REQUIREMENTS_DIR + '/lint.txt'


CURRENT_MIGRATION := ROOT_DIR + '/alembic/CURRENT'
DOCKER_COMPOSE := 'docker-compose --project-name ' + PROJECT_NAME

default:
    just --list --list-heading $'Available commands\n'

create-venv:
    python -m venv venv
    {{PIP}} install --upgrade pip
    {{PIP}} install pip-tools

compile-packages:
    {{PIP_COMPILE}} {{REQUIREMENTS_DIR}}/base.in --upgrade
    {{PIP_COMPILE}} {{REQUIREMENTS_DIR}}/lint.in --upgrade

install-local:
    {{PIP}} install -r {{BASE_REQUIREMENTS}}
    {{PIP}} install -r {{LINT_REQUIREMENTS}}

build-app:
    {{DOCKER_COMPOSE}} build

run-app:
    {{DOCKER_COMPOSE}} up

build-and-run: build-app run-app

setup: && install-local build-app init_db upgrade-db run-app
    if ! {{path_exists(VENV_DIR)}}; then just create-venv; fi

psql:
    {{DOCKER_COMPOSE}} run --rm api psql --host=$POSTGRES_HOST --dbname=$POSTGRES_DB --username=$POSTGRES_USER

init_db:
    {{DOCKER_COMPOSE}} run --rm api wait-for-it db:5432
    {{DOCKER_COMPOSE}} run --rm api pg_restore --host=$POSTGRES_HOST --dbname=$POSTGRES_DB --username=$POSTGRES_USER --format=custom {{INIT_DB_FILE}}

lint:
    {{BLACK}} src/
    {{FLAKE}} src/
    {{MYPY}} src/

app-bash:
    {{DOCKER_COMPOSE}} exec -it api bash

migrate-db message:
    {{DOCKER_COMPOSE}} run --rm api wait-for-it db:5432
    {{DOCKER_COMPOSE}} run --rm api alembic revision --autogenerate -m '{{message}}'
    @echo "$({{DOCKER_COMPOSE}} run --rm api alembic history)" | sed -n '1p' | sed -e 's/-> //' -e 's/ (head)//' > {{CURRENT_MIGRATION}}

upgrade-db:
    {{DOCKER_COMPOSE}} run --rm api wait-for-it db:5432
    {{DOCKER_COMPOSE}} run --rm api alembic upgrade head

remove-containers:
    {{DOCKER_COMPOSE}} stop
    {{DOCKER_COMPOSE}} down -v
